// Dialog für Weissagung mit Auswahl "Annehmen" oder "Ablehnen"

if (!actor) {
  ui.notifications.error("Kein Actor gefunden – bitte Makro aus einer Chatkarte eines Items/Zaubers auslösen.");
  return;
}

new Dialog({
  title: "Weissagung",
  content: `
    <p style="font-style: italic;">
      "Prophezeiungen sind meistens ein zweischneidiges Schwert. 
      Personen, die sich auf die Kunst der Weissagung verstehen, 
      können durch einen Blick in die vermeintliche Zukunft gute Ratschläge erteilen, 
      jedoch verunsichern sie oft auch denjenigen, an den die Prophezeiung gerichtet ist."
    </p>
  `,
  buttons: {
    accept: {
      icon: '<i class="fas fa-check"></i>',
      label: "Annehmen",
      callback: async () => {
        let current = getProperty(actor.system, "status.fatePoints.value") ?? 0;
        let max = getProperty(actor.system, "status.fatePoints.max") ?? 0;

        // Aktiver Effekt vorbereiten
        const effectData = {
          name: "Weissagung",
          icon: "icons/svg/aura.svg",
          origin: actor.uuid,
          duration: { rounds: null }, // unbegrenzt
          changes: [
            {
              key: "system.characteristics.IN.check.modifier",
              value: -1,
              mode: CONST.ACTIVE_EFFECT_MODES.ADD,
              priority: 20,
            }
          ],
          flags: {
            dsa5: {
              description: "Erschwernis -1 auf alle Proben mit IN.",
            },
          },
        };

        // Sonderfall: Maximum bereits erreicht
        if (current >= max) {
          // Effekt + Limit-Erhöhung hinzufügen
          effectData.changes.push({
            key: "system.status.fatePoints.gearmodifier",
            value: 1,
            mode: CONST.ACTIVE_EFFECT_MODES.ADD,
            priority: 20,
          });

          await actor.createEmbeddedDocuments("ActiveEffect", [effectData]);

          // Danach Schicksalspunkt hinzufügen
          await actor.update({ "system.status.fatePoints.value": current + 1 });
          current += 1;
          max += 1; // für die Nachricht
        } else {
          // Effekt nur mit IN-Erschwernis
          await actor.createEmbeddedDocuments("ActiveEffect", [effectData]);

          // Danach Schicksalspunkt hinzufügen
          await actor.update({ "system.status.fatePoints.value": current + 1 });
          current += 1;
        }

        ui.notifications.info(`${actor.name} erhält 1 Schicksalspunkt (${current}/${max}) und den Effekt "Weissagung" (IN-Erschwernis${current >= max ? " " : ""}).`);
      }
    },
    decline: {
      icon: '<i class="fas fa-times"></i>',
      label: "Ablehnen",
      callback: () => {
        ui.notifications.info("Die Weissagung wurde abgelehnt.");
      }
    }
  },
  default: "accept"
}).render(true);
